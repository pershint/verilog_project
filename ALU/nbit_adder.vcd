$date
	Sun Jan 28 16:12:27 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module full_adder_testbench $end
$scope module UUT_nbit_adder $end
$var wire 32 ! carry [31:0] $end
$var wire 1 " carry_out $end
$var wire 32 # i1 [31:0] $end
$var wire 32 $ i2 [31:0] $end
$var wire 32 % out [31:0] $end
$scope begin generate_nbit_adder[0] $end
$scope begin genblk2 $end
$scope module half_adder $end
$var wire 1 & i1 $end
$var wire 1 ' i2 $end
$var reg 1 ( carry $end
$var reg 1 ) sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[1] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 * HA1_cout $end
$var wire 1 + HA1_sout $end
$var wire 1 , HA2_cout $end
$var wire 1 - i1 $end
$var wire 1 . i2 $end
$var wire 1 / i3 $end
$var wire 1 0 sum $end
$var reg 1 1 carry $end
$scope module half_adder1 $end
$var wire 1 - i1 $end
$var wire 1 . i2 $end
$var reg 1 2 carry $end
$var reg 1 3 sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 + i1 $end
$var wire 1 / i2 $end
$var reg 1 4 carry $end
$var reg 1 5 sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[2] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 6 HA1_cout $end
$var wire 1 7 HA1_sout $end
$var wire 1 8 HA2_cout $end
$var wire 1 9 i1 $end
$var wire 1 : i2 $end
$var wire 1 ; i3 $end
$var wire 1 < sum $end
$var reg 1 = carry $end
$scope module half_adder1 $end
$var wire 1 9 i1 $end
$var wire 1 : i2 $end
$var reg 1 > carry $end
$var reg 1 ? sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 7 i1 $end
$var wire 1 ; i2 $end
$var reg 1 @ carry $end
$var reg 1 A sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[3] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 B HA1_cout $end
$var wire 1 C HA1_sout $end
$var wire 1 D HA2_cout $end
$var wire 1 E i1 $end
$var wire 1 F i2 $end
$var wire 1 G i3 $end
$var wire 1 H sum $end
$var reg 1 I carry $end
$scope module half_adder1 $end
$var wire 1 E i1 $end
$var wire 1 F i2 $end
$var reg 1 J carry $end
$var reg 1 K sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 C i1 $end
$var wire 1 G i2 $end
$var reg 1 L carry $end
$var reg 1 M sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[4] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 N HA1_cout $end
$var wire 1 O HA1_sout $end
$var wire 1 P HA2_cout $end
$var wire 1 Q i1 $end
$var wire 1 R i2 $end
$var wire 1 S i3 $end
$var wire 1 T sum $end
$var reg 1 U carry $end
$scope module half_adder1 $end
$var wire 1 Q i1 $end
$var wire 1 R i2 $end
$var reg 1 V carry $end
$var reg 1 W sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 O i1 $end
$var wire 1 S i2 $end
$var reg 1 X carry $end
$var reg 1 Y sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[5] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 Z HA1_cout $end
$var wire 1 [ HA1_sout $end
$var wire 1 \ HA2_cout $end
$var wire 1 ] i1 $end
$var wire 1 ^ i2 $end
$var wire 1 _ i3 $end
$var wire 1 ` sum $end
$var reg 1 a carry $end
$scope module half_adder1 $end
$var wire 1 ] i1 $end
$var wire 1 ^ i2 $end
$var reg 1 b carry $end
$var reg 1 c sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 [ i1 $end
$var wire 1 _ i2 $end
$var reg 1 d carry $end
$var reg 1 e sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[6] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 f HA1_cout $end
$var wire 1 g HA1_sout $end
$var wire 1 h HA2_cout $end
$var wire 1 i i1 $end
$var wire 1 j i2 $end
$var wire 1 k i3 $end
$var wire 1 l sum $end
$var reg 1 m carry $end
$scope module half_adder1 $end
$var wire 1 i i1 $end
$var wire 1 j i2 $end
$var reg 1 n carry $end
$var reg 1 o sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 g i1 $end
$var wire 1 k i2 $end
$var reg 1 p carry $end
$var reg 1 q sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[7] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 r HA1_cout $end
$var wire 1 s HA1_sout $end
$var wire 1 t HA2_cout $end
$var wire 1 u i1 $end
$var wire 1 v i2 $end
$var wire 1 w i3 $end
$var wire 1 x sum $end
$var reg 1 y carry $end
$scope module half_adder1 $end
$var wire 1 u i1 $end
$var wire 1 v i2 $end
$var reg 1 z carry $end
$var reg 1 { sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 s i1 $end
$var wire 1 w i2 $end
$var reg 1 | carry $end
$var reg 1 } sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[8] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 ~ HA1_cout $end
$var wire 1 !" HA1_sout $end
$var wire 1 "" HA2_cout $end
$var wire 1 #" i1 $end
$var wire 1 $" i2 $end
$var wire 1 %" i3 $end
$var wire 1 &" sum $end
$var reg 1 '" carry $end
$scope module half_adder1 $end
$var wire 1 #" i1 $end
$var wire 1 $" i2 $end
$var reg 1 (" carry $end
$var reg 1 )" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 !" i1 $end
$var wire 1 %" i2 $end
$var reg 1 *" carry $end
$var reg 1 +" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[9] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 ," HA1_cout $end
$var wire 1 -" HA1_sout $end
$var wire 1 ." HA2_cout $end
$var wire 1 /" i1 $end
$var wire 1 0" i2 $end
$var wire 1 1" i3 $end
$var wire 1 2" sum $end
$var reg 1 3" carry $end
$scope module half_adder1 $end
$var wire 1 /" i1 $end
$var wire 1 0" i2 $end
$var reg 1 4" carry $end
$var reg 1 5" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 -" i1 $end
$var wire 1 1" i2 $end
$var reg 1 6" carry $end
$var reg 1 7" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[10] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 8" HA1_cout $end
$var wire 1 9" HA1_sout $end
$var wire 1 :" HA2_cout $end
$var wire 1 ;" i1 $end
$var wire 1 <" i2 $end
$var wire 1 =" i3 $end
$var wire 1 >" sum $end
$var reg 1 ?" carry $end
$scope module half_adder1 $end
$var wire 1 ;" i1 $end
$var wire 1 <" i2 $end
$var reg 1 @" carry $end
$var reg 1 A" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 9" i1 $end
$var wire 1 =" i2 $end
$var reg 1 B" carry $end
$var reg 1 C" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[11] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 D" HA1_cout $end
$var wire 1 E" HA1_sout $end
$var wire 1 F" HA2_cout $end
$var wire 1 G" i1 $end
$var wire 1 H" i2 $end
$var wire 1 I" i3 $end
$var wire 1 J" sum $end
$var reg 1 K" carry $end
$scope module half_adder1 $end
$var wire 1 G" i1 $end
$var wire 1 H" i2 $end
$var reg 1 L" carry $end
$var reg 1 M" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 E" i1 $end
$var wire 1 I" i2 $end
$var reg 1 N" carry $end
$var reg 1 O" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[12] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 P" HA1_cout $end
$var wire 1 Q" HA1_sout $end
$var wire 1 R" HA2_cout $end
$var wire 1 S" i1 $end
$var wire 1 T" i2 $end
$var wire 1 U" i3 $end
$var wire 1 V" sum $end
$var reg 1 W" carry $end
$scope module half_adder1 $end
$var wire 1 S" i1 $end
$var wire 1 T" i2 $end
$var reg 1 X" carry $end
$var reg 1 Y" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 Q" i1 $end
$var wire 1 U" i2 $end
$var reg 1 Z" carry $end
$var reg 1 [" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[13] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 \" HA1_cout $end
$var wire 1 ]" HA1_sout $end
$var wire 1 ^" HA2_cout $end
$var wire 1 _" i1 $end
$var wire 1 `" i2 $end
$var wire 1 a" i3 $end
$var wire 1 b" sum $end
$var reg 1 c" carry $end
$scope module half_adder1 $end
$var wire 1 _" i1 $end
$var wire 1 `" i2 $end
$var reg 1 d" carry $end
$var reg 1 e" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 ]" i1 $end
$var wire 1 a" i2 $end
$var reg 1 f" carry $end
$var reg 1 g" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[14] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 h" HA1_cout $end
$var wire 1 i" HA1_sout $end
$var wire 1 j" HA2_cout $end
$var wire 1 k" i1 $end
$var wire 1 l" i2 $end
$var wire 1 m" i3 $end
$var wire 1 n" sum $end
$var reg 1 o" carry $end
$scope module half_adder1 $end
$var wire 1 k" i1 $end
$var wire 1 l" i2 $end
$var reg 1 p" carry $end
$var reg 1 q" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 i" i1 $end
$var wire 1 m" i2 $end
$var reg 1 r" carry $end
$var reg 1 s" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[15] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 t" HA1_cout $end
$var wire 1 u" HA1_sout $end
$var wire 1 v" HA2_cout $end
$var wire 1 w" i1 $end
$var wire 1 x" i2 $end
$var wire 1 y" i3 $end
$var wire 1 z" sum $end
$var reg 1 {" carry $end
$scope module half_adder1 $end
$var wire 1 w" i1 $end
$var wire 1 x" i2 $end
$var reg 1 |" carry $end
$var reg 1 }" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 u" i1 $end
$var wire 1 y" i2 $end
$var reg 1 ~" carry $end
$var reg 1 !# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[16] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 "# HA1_cout $end
$var wire 1 ## HA1_sout $end
$var wire 1 $# HA2_cout $end
$var wire 1 %# i1 $end
$var wire 1 &# i2 $end
$var wire 1 '# i3 $end
$var wire 1 (# sum $end
$var reg 1 )# carry $end
$scope module half_adder1 $end
$var wire 1 %# i1 $end
$var wire 1 &# i2 $end
$var reg 1 *# carry $end
$var reg 1 +# sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 ## i1 $end
$var wire 1 '# i2 $end
$var reg 1 ,# carry $end
$var reg 1 -# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[17] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 .# HA1_cout $end
$var wire 1 /# HA1_sout $end
$var wire 1 0# HA2_cout $end
$var wire 1 1# i1 $end
$var wire 1 2# i2 $end
$var wire 1 3# i3 $end
$var wire 1 4# sum $end
$var reg 1 5# carry $end
$scope module half_adder1 $end
$var wire 1 1# i1 $end
$var wire 1 2# i2 $end
$var reg 1 6# carry $end
$var reg 1 7# sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 /# i1 $end
$var wire 1 3# i2 $end
$var reg 1 8# carry $end
$var reg 1 9# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[18] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 :# HA1_cout $end
$var wire 1 ;# HA1_sout $end
$var wire 1 <# HA2_cout $end
$var wire 1 =# i1 $end
$var wire 1 ># i2 $end
$var wire 1 ?# i3 $end
$var wire 1 @# sum $end
$var reg 1 A# carry $end
$scope module half_adder1 $end
$var wire 1 =# i1 $end
$var wire 1 ># i2 $end
$var reg 1 B# carry $end
$var reg 1 C# sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 ;# i1 $end
$var wire 1 ?# i2 $end
$var reg 1 D# carry $end
$var reg 1 E# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[19] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 F# HA1_cout $end
$var wire 1 G# HA1_sout $end
$var wire 1 H# HA2_cout $end
$var wire 1 I# i1 $end
$var wire 1 J# i2 $end
$var wire 1 K# i3 $end
$var wire 1 L# sum $end
$var reg 1 M# carry $end
$scope module half_adder1 $end
$var wire 1 I# i1 $end
$var wire 1 J# i2 $end
$var reg 1 N# carry $end
$var reg 1 O# sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 G# i1 $end
$var wire 1 K# i2 $end
$var reg 1 P# carry $end
$var reg 1 Q# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[20] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 R# HA1_cout $end
$var wire 1 S# HA1_sout $end
$var wire 1 T# HA2_cout $end
$var wire 1 U# i1 $end
$var wire 1 V# i2 $end
$var wire 1 W# i3 $end
$var wire 1 X# sum $end
$var reg 1 Y# carry $end
$scope module half_adder1 $end
$var wire 1 U# i1 $end
$var wire 1 V# i2 $end
$var reg 1 Z# carry $end
$var reg 1 [# sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 S# i1 $end
$var wire 1 W# i2 $end
$var reg 1 \# carry $end
$var reg 1 ]# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[21] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 ^# HA1_cout $end
$var wire 1 _# HA1_sout $end
$var wire 1 `# HA2_cout $end
$var wire 1 a# i1 $end
$var wire 1 b# i2 $end
$var wire 1 c# i3 $end
$var wire 1 d# sum $end
$var reg 1 e# carry $end
$scope module half_adder1 $end
$var wire 1 a# i1 $end
$var wire 1 b# i2 $end
$var reg 1 f# carry $end
$var reg 1 g# sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 _# i1 $end
$var wire 1 c# i2 $end
$var reg 1 h# carry $end
$var reg 1 i# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[22] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 j# HA1_cout $end
$var wire 1 k# HA1_sout $end
$var wire 1 l# HA2_cout $end
$var wire 1 m# i1 $end
$var wire 1 n# i2 $end
$var wire 1 o# i3 $end
$var wire 1 p# sum $end
$var reg 1 q# carry $end
$scope module half_adder1 $end
$var wire 1 m# i1 $end
$var wire 1 n# i2 $end
$var reg 1 r# carry $end
$var reg 1 s# sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 k# i1 $end
$var wire 1 o# i2 $end
$var reg 1 t# carry $end
$var reg 1 u# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[23] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 v# HA1_cout $end
$var wire 1 w# HA1_sout $end
$var wire 1 x# HA2_cout $end
$var wire 1 y# i1 $end
$var wire 1 z# i2 $end
$var wire 1 {# i3 $end
$var wire 1 |# sum $end
$var reg 1 }# carry $end
$scope module half_adder1 $end
$var wire 1 y# i1 $end
$var wire 1 z# i2 $end
$var reg 1 ~# carry $end
$var reg 1 !$ sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 w# i1 $end
$var wire 1 {# i2 $end
$var reg 1 "$ carry $end
$var reg 1 #$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[24] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 $$ HA1_cout $end
$var wire 1 %$ HA1_sout $end
$var wire 1 &$ HA2_cout $end
$var wire 1 '$ i1 $end
$var wire 1 ($ i2 $end
$var wire 1 )$ i3 $end
$var wire 1 *$ sum $end
$var reg 1 +$ carry $end
$scope module half_adder1 $end
$var wire 1 '$ i1 $end
$var wire 1 ($ i2 $end
$var reg 1 ,$ carry $end
$var reg 1 -$ sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 %$ i1 $end
$var wire 1 )$ i2 $end
$var reg 1 .$ carry $end
$var reg 1 /$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[25] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 0$ HA1_cout $end
$var wire 1 1$ HA1_sout $end
$var wire 1 2$ HA2_cout $end
$var wire 1 3$ i1 $end
$var wire 1 4$ i2 $end
$var wire 1 5$ i3 $end
$var wire 1 6$ sum $end
$var reg 1 7$ carry $end
$scope module half_adder1 $end
$var wire 1 3$ i1 $end
$var wire 1 4$ i2 $end
$var reg 1 8$ carry $end
$var reg 1 9$ sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 1$ i1 $end
$var wire 1 5$ i2 $end
$var reg 1 :$ carry $end
$var reg 1 ;$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[26] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 <$ HA1_cout $end
$var wire 1 =$ HA1_sout $end
$var wire 1 >$ HA2_cout $end
$var wire 1 ?$ i1 $end
$var wire 1 @$ i2 $end
$var wire 1 A$ i3 $end
$var wire 1 B$ sum $end
$var reg 1 C$ carry $end
$scope module half_adder1 $end
$var wire 1 ?$ i1 $end
$var wire 1 @$ i2 $end
$var reg 1 D$ carry $end
$var reg 1 E$ sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 =$ i1 $end
$var wire 1 A$ i2 $end
$var reg 1 F$ carry $end
$var reg 1 G$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[27] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 H$ HA1_cout $end
$var wire 1 I$ HA1_sout $end
$var wire 1 J$ HA2_cout $end
$var wire 1 K$ i1 $end
$var wire 1 L$ i2 $end
$var wire 1 M$ i3 $end
$var wire 1 N$ sum $end
$var reg 1 O$ carry $end
$scope module half_adder1 $end
$var wire 1 K$ i1 $end
$var wire 1 L$ i2 $end
$var reg 1 P$ carry $end
$var reg 1 Q$ sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 I$ i1 $end
$var wire 1 M$ i2 $end
$var reg 1 R$ carry $end
$var reg 1 S$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[28] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 T$ HA1_cout $end
$var wire 1 U$ HA1_sout $end
$var wire 1 V$ HA2_cout $end
$var wire 1 W$ i1 $end
$var wire 1 X$ i2 $end
$var wire 1 Y$ i3 $end
$var wire 1 Z$ sum $end
$var reg 1 [$ carry $end
$scope module half_adder1 $end
$var wire 1 W$ i1 $end
$var wire 1 X$ i2 $end
$var reg 1 \$ carry $end
$var reg 1 ]$ sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 U$ i1 $end
$var wire 1 Y$ i2 $end
$var reg 1 ^$ carry $end
$var reg 1 _$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[29] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 `$ HA1_cout $end
$var wire 1 a$ HA1_sout $end
$var wire 1 b$ HA2_cout $end
$var wire 1 c$ i1 $end
$var wire 1 d$ i2 $end
$var wire 1 e$ i3 $end
$var wire 1 f$ sum $end
$var reg 1 g$ carry $end
$scope module half_adder1 $end
$var wire 1 c$ i1 $end
$var wire 1 d$ i2 $end
$var reg 1 h$ carry $end
$var reg 1 i$ sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 a$ i1 $end
$var wire 1 e$ i2 $end
$var reg 1 j$ carry $end
$var reg 1 k$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[30] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 l$ HA1_cout $end
$var wire 1 m$ HA1_sout $end
$var wire 1 n$ HA2_cout $end
$var wire 1 o$ i1 $end
$var wire 1 p$ i2 $end
$var wire 1 q$ i3 $end
$var wire 1 r$ sum $end
$var reg 1 s$ carry $end
$scope module half_adder1 $end
$var wire 1 o$ i1 $end
$var wire 1 p$ i2 $end
$var reg 1 t$ carry $end
$var reg 1 u$ sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 m$ i1 $end
$var wire 1 q$ i2 $end
$var reg 1 v$ carry $end
$var reg 1 w$ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[31] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 x$ HA1_cout $end
$var wire 1 y$ HA1_sout $end
$var wire 1 z$ HA2_cout $end
$var wire 1 {$ i1 $end
$var wire 1 |$ i2 $end
$var wire 1 }$ i3 $end
$var wire 1 ~$ sum $end
$var reg 1 !% carry $end
$scope module half_adder1 $end
$var wire 1 {$ i1 $end
$var wire 1 |$ i2 $end
$var reg 1 "% carry $end
$var reg 1 #% sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 y$ i1 $end
$var wire 1 }$ i2 $end
$var reg 1 $% carry $end
$var reg 1 %% sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x%%
0$%
0#%
0"%
x!%
x~$
x}$
0|$
0{$
0z$
0y$
0x$
xw$
0v$
0u$
0t$
xs$
xr$
xq$
0p$
0o$
0n$
0m$
0l$
xk$
0j$
0i$
0h$
xg$
xf$
xe$
0d$
0c$
0b$
0a$
0`$
x_$
0^$
0]$
0\$
x[$
xZ$
xY$
0X$
0W$
0V$
0U$
0T$
xS$
0R$
0Q$
0P$
xO$
xN$
xM$
0L$
0K$
0J$
0I$
0H$
xG$
0F$
0E$
0D$
xC$
xB$
xA$
0@$
0?$
0>$
0=$
0<$
x;$
0:$
09$
08$
x7$
x6$
x5$
04$
03$
02$
01$
00$
x/$
0.$
0-$
0,$
x+$
x*$
x)$
0($
0'$
0&$
0%$
0$$
x#$
0"$
0!$
0~#
x}#
x|#
x{#
0z#
0y#
0x#
0w#
0v#
xu#
0t#
0s#
0r#
xq#
xp#
xo#
0n#
0m#
0l#
0k#
0j#
xi#
0h#
0g#
0f#
xe#
xd#
xc#
0b#
0a#
0`#
0_#
0^#
x]#
0\#
0[#
0Z#
xY#
xX#
xW#
0V#
0U#
0T#
0S#
0R#
xQ#
0P#
0O#
0N#
xM#
xL#
xK#
0J#
0I#
0H#
0G#
0F#
xE#
0D#
0C#
0B#
xA#
x@#
x?#
0>#
0=#
0<#
0;#
0:#
x9#
08#
07#
06#
x5#
x4#
x3#
02#
01#
00#
0/#
0.#
x-#
0,#
0+#
0*#
x)#
x(#
x'#
0&#
0%#
0$#
0##
0"#
x!#
0~"
0}"
0|"
x{"
xz"
xy"
0x"
0w"
0v"
0u"
0t"
xs"
0r"
0q"
0p"
xo"
xn"
xm"
0l"
0k"
0j"
0i"
0h"
xg"
0f"
0e"
0d"
xc"
xb"
xa"
0`"
0_"
0^"
0]"
0\"
x["
0Z"
0Y"
0X"
xW"
xV"
xU"
0T"
0S"
0R"
0Q"
0P"
xO"
0N"
0M"
0L"
xK"
xJ"
xI"
0H"
0G"
0F"
0E"
0D"
xC"
0B"
0A"
0@"
x?"
x>"
x="
0<"
0;"
0:"
09"
08"
x7"
06"
05"
04"
x3"
x2"
x1"
00"
0/"
0."
0-"
0,"
x+"
x*"
1)"
0("
x'"
x&"
x%"
1$"
0#"
x""
1!"
0~
x}
x|
1{
0z
xy
xx
xw
0v
1u
xt
1s
0r
xq
0p
0o
0n
xm
xl
xk
0j
0i
0h
0g
0f
1e
0d
1c
0b
xa
1`
0_
1^
0]
0\
1[
0Z
1Y
0X
0W
0V
0U
1T
1S
0R
0Q
0P
0O
0N
0M
0L
0K
1J
1I
0H
0G
1F
1E
0D
0C
1B
1A
0@
0?
0>
0=
1<
1;
0:
09
08
07
06
05
04
03
12
11
00
0/
1.
1-
0,
0+
1*
1)
0(
1'
0&
bx110101 %
b100101011 $
b10001010 #
x"
bx01010 !
$end
#10
0"
0%%
0~$
0!%
0}$
0w$
0r$
0s$
0q$
0k$
0f$
0g$
0e$
0_$
0Z$
0[$
0Y$
0S$
0N$
0O$
0M$
0G$
0B$
0C$
0A$
0;$
06$
07$
05$
0/$
0*$
0+$
0)$
0#$
0|#
0}#
0{#
0u#
0p#
0q#
0o#
0i#
0d#
0e#
0c#
0]#
0X#
0Y#
0W#
0Q#
0L#
0M#
0K#
0E#
0@#
0A#
0?#
09#
04#
05#
03#
0-#
0(#
0)#
0'#
0!#
0z"
0{"
0y"
0s"
0n"
0o"
0m"
0g"
0b"
0c"
0a"
0["
0V"
0W"
0U"
0O"
0J"
0K"
0I"
0C"
0>"
0?"
0="
07"
02"
03"
01"
0+"
0&"
0'"
0%"
1q
1l
x}
xx
0y
0A
0<
1@
18
0Y
0T
1X
1P
0e
0`
b0x1000001 %
0k
0*"
0""
0p
0h
xw
0|
0t
1?
17
1W
1O
0c
0[
0a
0)"
0!"
02
0*
1o
1g
xm
b0x001010 !
0{
0s
0.
1:
1R
0^
0$"
0-
1i
0u
b11101 $
b1001000 #
#20
