$date
	Tue Feb  6 21:26:36 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module full_adder_testbench $end
$scope module UUT_nbit_adder $end
$var wire 16 ! carry [15:0] $end
$var wire 16 " i1 [15:0] $end
$var wire 16 # i2 [15:0] $end
$var wire 16 $ out [15:0] $end
$var reg 1 % carry_out $end
$scope begin generate_nbit_adder[0] $end
$scope begin genblk2 $end
$scope module half_adder $end
$var wire 1 & i1 $end
$var wire 1 ' i2 $end
$var reg 1 ( carry $end
$var reg 1 ) sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[1] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 * HA1_cout $end
$var wire 1 + HA1_sout $end
$var wire 1 , HA2_cout $end
$var wire 1 - i1 $end
$var wire 1 . i2 $end
$var wire 1 / i3 $end
$var wire 1 0 sum $end
$var reg 1 1 carry $end
$scope module half_adder1 $end
$var wire 1 - i1 $end
$var wire 1 . i2 $end
$var reg 1 2 carry $end
$var reg 1 3 sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 + i1 $end
$var wire 1 / i2 $end
$var reg 1 4 carry $end
$var reg 1 5 sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[2] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 6 HA1_cout $end
$var wire 1 7 HA1_sout $end
$var wire 1 8 HA2_cout $end
$var wire 1 9 i1 $end
$var wire 1 : i2 $end
$var wire 1 ; i3 $end
$var wire 1 < sum $end
$var reg 1 = carry $end
$scope module half_adder1 $end
$var wire 1 9 i1 $end
$var wire 1 : i2 $end
$var reg 1 > carry $end
$var reg 1 ? sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 7 i1 $end
$var wire 1 ; i2 $end
$var reg 1 @ carry $end
$var reg 1 A sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[3] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 B HA1_cout $end
$var wire 1 C HA1_sout $end
$var wire 1 D HA2_cout $end
$var wire 1 E i1 $end
$var wire 1 F i2 $end
$var wire 1 G i3 $end
$var wire 1 H sum $end
$var reg 1 I carry $end
$scope module half_adder1 $end
$var wire 1 E i1 $end
$var wire 1 F i2 $end
$var reg 1 J carry $end
$var reg 1 K sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 C i1 $end
$var wire 1 G i2 $end
$var reg 1 L carry $end
$var reg 1 M sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[4] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 N HA1_cout $end
$var wire 1 O HA1_sout $end
$var wire 1 P HA2_cout $end
$var wire 1 Q i1 $end
$var wire 1 R i2 $end
$var wire 1 S i3 $end
$var wire 1 T sum $end
$var reg 1 U carry $end
$scope module half_adder1 $end
$var wire 1 Q i1 $end
$var wire 1 R i2 $end
$var reg 1 V carry $end
$var reg 1 W sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 O i1 $end
$var wire 1 S i2 $end
$var reg 1 X carry $end
$var reg 1 Y sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[5] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 Z HA1_cout $end
$var wire 1 [ HA1_sout $end
$var wire 1 \ HA2_cout $end
$var wire 1 ] i1 $end
$var wire 1 ^ i2 $end
$var wire 1 _ i3 $end
$var wire 1 ` sum $end
$var reg 1 a carry $end
$scope module half_adder1 $end
$var wire 1 ] i1 $end
$var wire 1 ^ i2 $end
$var reg 1 b carry $end
$var reg 1 c sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 [ i1 $end
$var wire 1 _ i2 $end
$var reg 1 d carry $end
$var reg 1 e sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[6] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 f HA1_cout $end
$var wire 1 g HA1_sout $end
$var wire 1 h HA2_cout $end
$var wire 1 i i1 $end
$var wire 1 j i2 $end
$var wire 1 k i3 $end
$var wire 1 l sum $end
$var reg 1 m carry $end
$scope module half_adder1 $end
$var wire 1 i i1 $end
$var wire 1 j i2 $end
$var reg 1 n carry $end
$var reg 1 o sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 g i1 $end
$var wire 1 k i2 $end
$var reg 1 p carry $end
$var reg 1 q sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[7] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 r HA1_cout $end
$var wire 1 s HA1_sout $end
$var wire 1 t HA2_cout $end
$var wire 1 u i1 $end
$var wire 1 v i2 $end
$var wire 1 w i3 $end
$var wire 1 x sum $end
$var reg 1 y carry $end
$scope module half_adder1 $end
$var wire 1 u i1 $end
$var wire 1 v i2 $end
$var reg 1 z carry $end
$var reg 1 { sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 s i1 $end
$var wire 1 w i2 $end
$var reg 1 | carry $end
$var reg 1 } sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[8] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 ~ HA1_cout $end
$var wire 1 !" HA1_sout $end
$var wire 1 "" HA2_cout $end
$var wire 1 #" i1 $end
$var wire 1 $" i2 $end
$var wire 1 %" i3 $end
$var wire 1 &" sum $end
$var reg 1 '" carry $end
$scope module half_adder1 $end
$var wire 1 #" i1 $end
$var wire 1 $" i2 $end
$var reg 1 (" carry $end
$var reg 1 )" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 !" i1 $end
$var wire 1 %" i2 $end
$var reg 1 *" carry $end
$var reg 1 +" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[9] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 ," HA1_cout $end
$var wire 1 -" HA1_sout $end
$var wire 1 ." HA2_cout $end
$var wire 1 /" i1 $end
$var wire 1 0" i2 $end
$var wire 1 1" i3 $end
$var wire 1 2" sum $end
$var reg 1 3" carry $end
$scope module half_adder1 $end
$var wire 1 /" i1 $end
$var wire 1 0" i2 $end
$var reg 1 4" carry $end
$var reg 1 5" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 -" i1 $end
$var wire 1 1" i2 $end
$var reg 1 6" carry $end
$var reg 1 7" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[10] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 8" HA1_cout $end
$var wire 1 9" HA1_sout $end
$var wire 1 :" HA2_cout $end
$var wire 1 ;" i1 $end
$var wire 1 <" i2 $end
$var wire 1 =" i3 $end
$var wire 1 >" sum $end
$var reg 1 ?" carry $end
$scope module half_adder1 $end
$var wire 1 ;" i1 $end
$var wire 1 <" i2 $end
$var reg 1 @" carry $end
$var reg 1 A" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 9" i1 $end
$var wire 1 =" i2 $end
$var reg 1 B" carry $end
$var reg 1 C" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[11] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 D" HA1_cout $end
$var wire 1 E" HA1_sout $end
$var wire 1 F" HA2_cout $end
$var wire 1 G" i1 $end
$var wire 1 H" i2 $end
$var wire 1 I" i3 $end
$var wire 1 J" sum $end
$var reg 1 K" carry $end
$scope module half_adder1 $end
$var wire 1 G" i1 $end
$var wire 1 H" i2 $end
$var reg 1 L" carry $end
$var reg 1 M" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 E" i1 $end
$var wire 1 I" i2 $end
$var reg 1 N" carry $end
$var reg 1 O" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[12] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 P" HA1_cout $end
$var wire 1 Q" HA1_sout $end
$var wire 1 R" HA2_cout $end
$var wire 1 S" i1 $end
$var wire 1 T" i2 $end
$var wire 1 U" i3 $end
$var wire 1 V" sum $end
$var reg 1 W" carry $end
$scope module half_adder1 $end
$var wire 1 S" i1 $end
$var wire 1 T" i2 $end
$var reg 1 X" carry $end
$var reg 1 Y" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 Q" i1 $end
$var wire 1 U" i2 $end
$var reg 1 Z" carry $end
$var reg 1 [" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[13] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 \" HA1_cout $end
$var wire 1 ]" HA1_sout $end
$var wire 1 ^" HA2_cout $end
$var wire 1 _" i1 $end
$var wire 1 `" i2 $end
$var wire 1 a" i3 $end
$var wire 1 b" sum $end
$var reg 1 c" carry $end
$scope module half_adder1 $end
$var wire 1 _" i1 $end
$var wire 1 `" i2 $end
$var reg 1 d" carry $end
$var reg 1 e" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 ]" i1 $end
$var wire 1 a" i2 $end
$var reg 1 f" carry $end
$var reg 1 g" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[14] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 h" HA1_cout $end
$var wire 1 i" HA1_sout $end
$var wire 1 j" HA2_cout $end
$var wire 1 k" i1 $end
$var wire 1 l" i2 $end
$var wire 1 m" i3 $end
$var wire 1 n" sum $end
$var reg 1 o" carry $end
$scope module half_adder1 $end
$var wire 1 k" i1 $end
$var wire 1 l" i2 $end
$var reg 1 p" carry $end
$var reg 1 q" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 i" i1 $end
$var wire 1 m" i2 $end
$var reg 1 r" carry $end
$var reg 1 s" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin generate_nbit_adder[15] $end
$scope begin genblk3 $end
$scope module full_adder $end
$var wire 1 t" HA1_cout $end
$var wire 1 u" HA1_sout $end
$var wire 1 v" HA2_cout $end
$var wire 1 w" i1 $end
$var wire 1 x" i2 $end
$var wire 1 y" i3 $end
$var wire 1 z" sum $end
$var reg 1 {" carry $end
$scope module half_adder1 $end
$var wire 1 w" i1 $end
$var wire 1 x" i2 $end
$var reg 1 |" carry $end
$var reg 1 }" sum $end
$upscope $end
$scope module half_adder2 $end
$var wire 1 u" i1 $end
$var wire 1 y" i2 $end
$var reg 1 ~" carry $end
$var reg 1 !# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
1+"
0*"
1)"
0("
0'"
1&"
0%"
1$"
0#"
0""
1!"
0~
1}
0|
1{
0z
0y
1x
0w
0v
1u
0t
1s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
1e
0d
1c
0b
0a
1`
0_
1^
0]
0\
1[
0Z
1Y
0X
0W
0V
0U
1T
1S
0R
0Q
0P
0O
0N
0M
0L
0K
1J
1I
0H
0G
1F
1E
0D
0C
1B
1A
0@
0?
0>
0=
1<
1;
0:
09
08
07
06
05
04
03
12
11
00
0/
1.
1-
0,
0+
1*
1)
0(
1'
0&
0%
b110110101 $
b100101011 #
b10001010 "
b1010 !
$end
#10
0M
0H
0G
1_
0=
1U
0;
1A
1<
0@
08
0Y
0T
1X
1P
1e
1`
0+"
0&"
01
b11000 !
1q
1l
0}
0x
b1100101 $
1?
17
1W
1O
0c
0[
0)"
0!"
02
0*
1o
1g
0{
0s
0.
1:
1R
0^
0$"
0-
1i
0u
b11101 #
b1001000 "
#20
